# Generated by Django 4.2.24 on 2025-09-13 14:20

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("academic", "0005_academicuser_pubmed_query"),
    ]

    operations = [
        migrations.CreateModel(
            name="AuthorCache",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "normalized_name",
                    models.CharField(
                        db_index=True,
                        help_text="Normalized author name for matching",
                        max_length=500,
                    ),
                ),
                (
                    "name_variations",
                    models.JSONField(
                        default=list, help_text="List of name variations encountered"
                    ),
                ),
                (
                    "scopus_id",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        help_text="Scopus Author ID",
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "orcid_id",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        help_text="ORCID ID",
                        max_length=19,
                        null=True,
                    ),
                ),
                ("given_name", models.CharField(blank=True, max_length=200)),
                ("surname", models.CharField(blank=True, max_length=200)),
                (
                    "affiliations",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="Known institutional affiliations",
                    ),
                ),
                (
                    "source",
                    models.CharField(
                        choices=[
                            ("scopus", "Scopus"),
                            ("orcid", "ORCID"),
                            ("manual", "Manual"),
                            ("crossref", "CrossRef"),
                        ],
                        help_text="Source of the ID information",
                        max_length=50,
                    ),
                ),
                (
                    "confidence_score",
                    models.FloatField(
                        default=1.0,
                        help_text="Confidence in the mapping (0.0-1.0)",
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(1.0),
                        ],
                    ),
                ),
                (
                    "lookup_count",
                    models.PositiveIntegerField(
                        default=1,
                        help_text="Number of times this mapping has been used",
                    ),
                ),
                (
                    "last_verified",
                    models.DateTimeField(
                        blank=True,
                        help_text="Last time this mapping was verified",
                        null=True,
                    ),
                ),
                (
                    "verification_method",
                    models.CharField(
                        blank=True,
                        help_text="Method used for last verification",
                        max_length=100,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Author Cache Entry",
                "verbose_name_plural": "Author Cache Entries",
                "ordering": ["-confidence_score", "-lookup_count", "-updated_at"],
                "indexes": [
                    models.Index(
                        fields=["normalized_name"],
                        name="academic_au_normali_e97f93_idx",
                    ),
                    models.Index(
                        fields=["scopus_id"], name="academic_au_scopus__232438_idx"
                    ),
                    models.Index(
                        fields=["orcid_id"], name="academic_au_orcid_i_07ee87_idx"
                    ),
                    models.Index(
                        fields=["source", "confidence_score"],
                        name="academic_au_source_c68a7a_idx",
                    ),
                ],
                "unique_together": {("normalized_name", "scopus_id", "orcid_id")},
            },
        ),
    ]
