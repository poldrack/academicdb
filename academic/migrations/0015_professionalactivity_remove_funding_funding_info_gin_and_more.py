# Generated by Django 4.2.24 on 2025-09-15 13:25

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ("academic", "0014_add_fulltext_search"),
    ]

    operations = [
        migrations.CreateModel(
            name="ProfessionalActivity",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "activity_type",
                    models.CharField(
                        choices=[
                            ("employment", "Employment"),
                            ("education", "Education"),
                            ("qualification", "Qualification"),
                            ("invited_position", "Invited Position"),
                            ("distinction", "Distinction"),
                            ("membership", "Membership"),
                            ("service", "Service"),
                        ],
                        help_text="Type of professional activity",
                        max_length=50,
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        help_text="Position title or activity name", max_length=500
                    ),
                ),
                (
                    "organization",
                    models.CharField(
                        help_text="Organization or institution name", max_length=500
                    ),
                ),
                (
                    "department",
                    models.CharField(
                        blank=True,
                        help_text="Department within organization",
                        max_length=500,
                        null=True,
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        blank=True,
                        help_text="Role or position type",
                        max_length=200,
                        null=True,
                    ),
                ),
                (
                    "start_date",
                    models.DateField(
                        blank=True, help_text="Start date of activity", null=True
                    ),
                ),
                (
                    "end_date",
                    models.DateField(
                        blank=True,
                        help_text="End date of activity (null for current positions)",
                        null=True,
                    ),
                ),
                (
                    "is_current",
                    models.BooleanField(
                        default=False, help_text="Is this a current/ongoing activity?"
                    ),
                ),
                ("city", models.CharField(blank=True, max_length=200, null=True)),
                ("region", models.CharField(blank=True, max_length=200, null=True)),
                ("country", models.CharField(blank=True, max_length=200, null=True)),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Description of the activity or role",
                        null=True,
                    ),
                ),
                (
                    "url",
                    models.URLField(
                        blank=True,
                        help_text="URL for more information",
                        max_length=500,
                        null=True,
                    ),
                ),
                (
                    "orcid_put_code",
                    models.CharField(
                        blank=True,
                        help_text="ORCID put-code for this activity",
                        max_length=50,
                        null=True,
                        unique=True,
                    ),
                ),
                (
                    "orcid_path",
                    models.CharField(
                        blank=True,
                        help_text="ORCID API path for this activity",
                        max_length=200,
                        null=True,
                    ),
                ),
                (
                    "orcid_visibility",
                    models.CharField(
                        blank=True,
                        help_text="ORCID visibility setting",
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "orcid_data",
                    models.JSONField(
                        blank=True, default=dict, help_text="Raw data from ORCID API"
                    ),
                ),
                (
                    "source",
                    models.CharField(
                        choices=[("orcid", "ORCID"), ("manual", "Manual Entry")],
                        default="orcid",
                        help_text="Original data source",
                        max_length=50,
                    ),
                ),
                (
                    "manual_edits",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Tracks which fields have been manually edited",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "last_synced",
                    models.DateTimeField(
                        blank=True, help_text="Last time synced from ORCID", null=True
                    ),
                ),
            ],
            options={
                "verbose_name": "Professional Activity",
                "verbose_name_plural": "Professional Activities",
                "ordering": ["-is_current", "-start_date", "title"],
            },
        ),
        migrations.RemoveIndex(
            model_name="funding",
            name="funding_info_gin",
        ),
        migrations.RemoveIndex(
            model_name="publication",
            name="publication_metadata_gin",
        ),
        migrations.RemoveIndex(
            model_name="publication",
            name="publication_authors_gin",
        ),
        migrations.RemoveIndex(
            model_name="publication",
            name="publication_identifiers_gin",
        ),
        migrations.AddField(
            model_name="professionalactivity",
            name="owner",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="professional_activities",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddIndex(
            model_name="professionalactivity",
            index=models.Index(
                fields=["owner", "activity_type"], name="academic_pr_owner_i_28b0ee_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="professionalactivity",
            index=models.Index(
                fields=["owner", "is_current"], name="academic_pr_owner_i_92be70_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="professionalactivity",
            index=models.Index(
                fields=["activity_type", "start_date"],
                name="academic_pr_activit_4ac0db_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="professionalactivity",
            index=models.Index(
                fields=["orcid_put_code"], name="academic_pr_orcid_p_4665e9_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="professionalactivity",
            unique_together={("owner", "orcid_put_code")},
        ),
    ]
