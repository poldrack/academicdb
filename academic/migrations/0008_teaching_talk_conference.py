# Generated by Django 4.2.24 on 2025-09-13 19:00

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ("academic", "0007_funding"),
    ]

    operations = [
        migrations.CreateModel(
            name="Teaching",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(help_text="Course name or title", max_length=300),
                ),
                (
                    "level",
                    models.CharField(
                        choices=[
                            ("undergraduate", "Undergraduate"),
                            ("graduate", "Graduate"),
                            ("postdoc", "Postdoctoral"),
                            ("professional", "Professional Development"),
                            ("other", "Other"),
                        ],
                        default="undergraduate",
                        help_text="Academic level of the course",
                        max_length=50,
                    ),
                ),
                (
                    "course_number",
                    models.CharField(
                        blank=True,
                        help_text="Course number/code (e.g., PSYC 101)",
                        max_length=50,
                    ),
                ),
                (
                    "semester",
                    models.CharField(
                        blank=True,
                        help_text="Semester taught (e.g., Fall 2023)",
                        max_length=50,
                    ),
                ),
                (
                    "year",
                    models.IntegerField(
                        blank=True,
                        help_text="Year taught",
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1950),
                            django.core.validators.MaxValueValidator(2035),
                        ],
                    ),
                ),
                (
                    "institution",
                    models.CharField(
                        blank=True,
                        help_text="Institution where course was taught",
                        max_length=200,
                    ),
                ),
                (
                    "enrollment",
                    models.PositiveIntegerField(
                        blank=True, help_text="Number of students enrolled", null=True
                    ),
                ),
                (
                    "additional_info",
                    models.JSONField(
                        blank=True, default=dict, help_text="Additional course details"
                    ),
                ),
                (
                    "source",
                    models.CharField(
                        choices=[
                            ("manual", "Manual Entry"),
                            ("import", "File Import"),
                            ("institutional", "Institutional System"),
                        ],
                        default="manual",
                        help_text="Original data source",
                        max_length=50,
                    ),
                ),
                (
                    "manual_edits",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Tracks which fields have been manually edited",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="teaching",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Teaching Activity",
                "verbose_name_plural": "Teaching Activities",
                "ordering": ["-year", "level", "name"],
                "indexes": [
                    models.Index(
                        fields=["owner", "year"], name="academic_te_owner_i_912caa_idx"
                    ),
                    models.Index(
                        fields=["level", "year"], name="academic_te_level_628884_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="Talk",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "year",
                    models.IntegerField(
                        help_text="Year of the talk",
                        validators=[
                            django.core.validators.MinValueValidator(1950),
                            django.core.validators.MaxValueValidator(2035),
                        ],
                    ),
                ),
                (
                    "place",
                    models.CharField(
                        help_text="Institution, university, or venue where talk was given",
                        max_length=500,
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        blank=True, help_text="Title of the talk", max_length=500
                    ),
                ),
                (
                    "date",
                    models.DateField(
                        blank=True, help_text="Specific date of the talk", null=True
                    ),
                ),
                (
                    "invited",
                    models.BooleanField(
                        default=True, help_text="Was this an invited talk?"
                    ),
                ),
                (
                    "virtual",
                    models.BooleanField(
                        default=False, help_text="Was this talk given virtually?"
                    ),
                ),
                (
                    "additional_info",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Additional talk details (audience size, event name, etc.)",
                    ),
                ),
                (
                    "source",
                    models.CharField(
                        choices=[("manual", "Manual Entry"), ("import", "File Import")],
                        default="manual",
                        help_text="Original data source",
                        max_length=50,
                    ),
                ),
                (
                    "manual_edits",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Tracks which fields have been manually edited",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="talks",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Talk",
                "verbose_name_plural": "Talks",
                "ordering": ["-year", "-date", "place"],
                "indexes": [
                    models.Index(
                        fields=["owner", "year"], name="academic_ta_owner_i_295e6f_idx"
                    ),
                    models.Index(
                        fields=["year", "invited"], name="academic_ta_year_907133_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="Conference",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        help_text="Title of the presentation/poster", max_length=500
                    ),
                ),
                (
                    "authors",
                    models.TextField(
                        help_text="Authors of the presentation (as they appear in program)"
                    ),
                ),
                (
                    "year",
                    models.IntegerField(
                        help_text="Year of the conference",
                        validators=[
                            django.core.validators.MinValueValidator(1950),
                            django.core.validators.MaxValueValidator(2035),
                        ],
                    ),
                ),
                (
                    "location",
                    models.CharField(
                        help_text="Conference location (city, venue, or 'virtual')",
                        max_length=500,
                    ),
                ),
                (
                    "month",
                    models.CharField(
                        blank=True, help_text="Month of the conference", max_length=20
                    ),
                ),
                (
                    "conference_name",
                    models.CharField(
                        blank=True,
                        help_text="Name of the conference or meeting",
                        max_length=300,
                    ),
                ),
                (
                    "presentation_type",
                    models.CharField(
                        choices=[
                            ("talk", "Talk/Presentation"),
                            ("poster", "Poster"),
                            ("keynote", "Keynote"),
                            ("workshop", "Workshop"),
                            ("panel", "Panel Discussion"),
                            ("other", "Other"),
                        ],
                        default="talk",
                        help_text="Type of presentation",
                        max_length=50,
                    ),
                ),
                (
                    "link",
                    models.URLField(
                        blank=True,
                        help_text="Link to presentation, abstract, or conference page",
                    ),
                ),
                (
                    "abstract",
                    models.TextField(
                        blank=True, help_text="Abstract of the presentation"
                    ),
                ),
                (
                    "parsed_authors",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="Structured author information",
                    ),
                ),
                (
                    "additional_info",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Additional conference details",
                    ),
                ),
                (
                    "source",
                    models.CharField(
                        choices=[("manual", "Manual Entry"), ("import", "File Import")],
                        default="manual",
                        help_text="Original data source",
                        max_length=50,
                    ),
                ),
                (
                    "manual_edits",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Tracks which fields have been manually edited",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="conferences",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Conference Presentation",
                "verbose_name_plural": "Conference Presentations",
                "ordering": ["-year", "month", "title"],
                "indexes": [
                    models.Index(
                        fields=["owner", "year"], name="academic_co_owner_i_70dd59_idx"
                    ),
                    models.Index(
                        fields=["year", "presentation_type"],
                        name="academic_co_year_a5cd11_idx",
                    ),
                ],
            },
        ),
    ]
