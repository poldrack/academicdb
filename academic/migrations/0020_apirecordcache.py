# Generated by Django 4.2.24 on 2025-09-15 21:47

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("academic", "0019_add_pmcache_model"),
    ]

    operations = [
        migrations.CreateModel(
            name="APIRecordCache",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "api_source",
                    models.CharField(
                        choices=[
                            ("scopus", "Scopus"),
                            ("pubmed", "PubMed"),
                            ("crossref", "CrossRef"),
                        ],
                        db_index=True,
                        help_text="Source API for this record",
                        max_length=20,
                    ),
                ),
                (
                    "api_id",
                    models.CharField(
                        db_index=True,
                        help_text="API-specific identifier (DOI, PMID, Scopus ID, etc.)",
                        max_length=255,
                    ),
                ),
                (
                    "doi",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        help_text="DOI if available",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "pmid",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        help_text="PubMed ID if available",
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "scopus_id",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        help_text="Scopus ID if available",
                        max_length=50,
                        null=True,
                    ),
                ),
                ("raw_data", models.JSONField(help_text="Complete API response data")),
                (
                    "title",
                    models.TextField(
                        blank=True,
                        help_text="Publication title extracted from API data",
                    ),
                ),
                (
                    "year",
                    models.IntegerField(
                        blank=True,
                        db_index=True,
                        help_text="Publication year extracted from API data",
                        null=True,
                    ),
                ),
                (
                    "authors",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="Author list extracted from API data",
                    ),
                ),
                (
                    "lookup_count",
                    models.PositiveIntegerField(
                        default=1,
                        help_text="Number of times this record has been accessed",
                    ),
                ),
                (
                    "last_accessed",
                    models.DateTimeField(
                        auto_now=True, help_text="Last time this record was accessed"
                    ),
                ),
                (
                    "is_complete",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this record contains complete data",
                    ),
                ),
                (
                    "api_version",
                    models.CharField(
                        blank=True,
                        help_text="API version when record was fetched",
                        max_length=50,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "API Record Cache",
                "verbose_name_plural": "API Record Cache",
                "ordering": ["-last_accessed", "-lookup_count"],
                "indexes": [
                    models.Index(
                        fields=["api_source", "api_id"],
                        name="academic_ap_api_sou_37082a_idx",
                    ),
                    models.Index(fields=["doi"], name="academic_ap_doi_543cec_idx"),
                    models.Index(fields=["pmid"], name="academic_ap_pmid_816399_idx"),
                    models.Index(
                        fields=["scopus_id"], name="academic_ap_scopus__fc25b8_idx"
                    ),
                    models.Index(
                        fields=["api_source", "year"],
                        name="academic_ap_api_sou_b008f6_idx",
                    ),
                    models.Index(
                        fields=["lookup_count", "-last_accessed"],
                        name="academic_ap_lookup__087957_idx",
                    ),
                ],
                "unique_together": {("api_source", "api_id")},
            },
        ),
    ]
